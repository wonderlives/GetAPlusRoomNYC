runApp('~/Shiny/rogerPro')
install.packages("shinyWidgets")
shinyWidgets::shinyWidgetsGallery()
install.packages('formatR')
shinyWidgets::shinyWidgetsGallery()
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
shinyWidgets::shinyWidgetsGallery()
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
shinyWidgets::shinyWidgetsGallery()
runApp('~/Shiny/rogerPro')
shinyWidgets::shinyWidgetsGallery()
shinyWidgets::shinyWidgetsGallery()
shinyWidgets::shinyWidgetsGallery()
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
shinyWidgets::shinyWidgetsGallery()
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
shinyWidgets::shinyWidgetsGallery()
runApp('~/Shiny/rogerPro')
shinyWidgets::shinyWidgetsGallery()
runApp('~/Shiny/rogerPro')
shinyWidgets::shinyWidgetsGallery()
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
?revgeocode
devtools::install_github('rstudio/leaflet')
runApp('~/Shiny/rogerPro')
detach("package:leaflet", unload=TRUE)
runApp('~/Shiny/rogerPro')
devtools::install_github('rstudio/leaflet')
shiny::runApp('~/Shiny/rogerPro')
runApp('~/Shiny/clickCircle/clickCircle.R')
runApp('~/Shiny/clickCircle/clickCircle.R')
revgeocode
?revgeocode
install.packages('ggmap')
runApp('~/Shiny/rogerPro')
shinyWidgets::shinyWidgetsGallery()
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
shinyWidgets::shinyWidgetsGallery()
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
shinyWidgets::shinyWidgetsGallery()
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
result = paste0(baseDomain,apiKey,"&origin=",lat,"%2C",lon,"8&mode=",mode,"&time=",time)
urlWalkScore = function(apiKey, lat, lon, mode, time) {
baseDomain = "http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey="
result = paste0(baseDomain,apiKey,"&origin=",lat,"%2C",lon,"8&mode=",mode,"&time=",time)
return (result)
}
apiKeyWalkScore = "8412c70d89cbac3d039721166ed78575"
mode = "transit"
time = 40
lat = 40.75453936
lon = -73.996696
url = urlWalkScore(apiKeyWalkScore, lat, lon, mode, time)
url
pp = getURL(url)
pp
class(pp)
read_json(url)
k = read_json(url)
View(k)
k$response$geometry
class(k$response$geometry)
getJsonWalkScore = fucntion(url) {
rawJson = read_json(url) # stringToList
geoList = rawJson$response$geometry #listToGeoList
geoJsonWalkScore = toJSON(geolist)
return(geoJsonWalkScore)
}
getJsonWalkScore = fucntion(url) {
rawJson = read_json(url) # stringToList
geoList = rawJson$response$geometry #listToGeoList
geoJsonWalkScore = toJSON(geolist)
return(geoJsonWalkScore)
}
return (geoJsonWalkScore)
getJsonWalkScore = fucntion(url) {
rawJson = read_json(url) # stringToList
geoList = rawJson$response$geometry #listToGeoList
geoJsonWalkScore = toJSON(geolist)
return (geoJsonWalkScore)
}
getJsonWalkScore = function(url) {
rawJson = read_json(url) # stringToList
geoList = rawJson$response$geometry #listToGeoList
geoJsonWalkScore = toJSON(geolist)
return (geoJsonWalkScore)
}
ren = getJsonWalkScore(pp)
ren = getJsonWalkScore(url)
class(ren)
getJsonWalkScore = function(url) {
rawJson = read_json(url) # stringToList
geoList = rawJson$response$geometry #listToGeoList
geoJsonWalkScore = toJSON(geoList)
return (geoJsonWalkScore)
}
ren = getJsonWalkScore(url)
ren
class(ren)
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
runApp('~/Shiny/rogerPro')
urlWalkScore = function(apiKey, lat, lon, mode, time) {
baseDomain = "http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey="
result = paste0(baseDomain,apiKey,"&origin=",lat,"%2C",lon,"8&mode=",mode,"&time=",time)
return (result)
}
getJsonWalkScore = function(url) {
rawJson = read_json(url) # stringToList
geoList = rawJson$response$geometry #listToGeoList
geoJsonWalkScore = toJSON(geoList)
return (geoJsonWalkScore)
}
apiKeyWalkScore = "8412c70d89cbac3d039721166ed78575"
mode = "transit"
time = 40
lat = 40.75453936
lon = -73.996696
url = urlWalkScore(apiKeyWalkScore, lat, lon, mode, time)
ren = getJsonWalkScore(url)
zonePolygon = geojsonio::geojson_read(ren, what = "sp")
getJsonWalkScore = function(url) {
rawJson = read_json(url) # stringToList
geoList = rawJson$response$geometry #listToGeoList
geoJsonWalkScore = toGeoJSON(geoList)
return (geoJsonWalkScore)
}
apiKeyWalkScore = "8412c70d89cbac3d039721166ed78575"
mode = "transit"
time = 40
lat = 40.75453936
lon = -73.996696
url = urlWalkScore(apiKeyWalkScore, lat, lon, mode, time)
ren = getJsonWalkScore(url)
zonePolygon = geojsonio::geojson_read(ren, what = "sp")
helper
class(ren)
write(ren, "final.geojson")
zonePolygon = geojsonio::geojson_read("final.geojson", what = "sp")
?geojson_read
lat = 47.6062095
lon = -122.3320708
url = urlWalkScore(apiKeyWalkScore, lat, lon, mode, time)
ren = getJsonWalkScore(url)
write(ren, "final.geojson")
zonePolygon = geojsonio::geojson_read("final.geojson", what = "sp")
devtools::install_github("ropensci/geojsonio")
detach("package:geojsonio", unload=TRUE)
library("geojsonio", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
detach("package:geojsonio", unload=TRUE)
devtools::install_github("ropensci/geojsonio")
library("geojson", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
apiKeyWalkScore = "8412c70d89cbac3d039721166ed78575"
mode = "transit"
time = 40
lat = 47.6062095
lon = -122.3320708
url = urlWalkScore(apiKeyWalkScore, lat, lon, mode, time)
ren = getJsonWalkScore(url)
library("geojsonio", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
geoJsonWalkScore = toJSON(geoList)
return (geoJsonWalkScore)
getJsonWalkScore = function(url) {
rawJson = read_json(url) # stringToList
geoList = rawJson$response$geometry #listToGeoList
geoJsonWalkScore = toJSON(geoList)
return (geoJsonWalkScore)
}
apiKeyWalkScore = "8412c70d89cbac3d039721166ed78575"
mode = "transit"
time = 40
lat = 47.6062095
lon = -122.3320708
url = urlWalkScore(apiKeyWalkScore, lat, lon, mode, time)
ren = getJsonWalkScore(url)
write(ren, "final.geojson")
zonePolygon = geojsonio::geojson_read("final.geojson", what = "sp")
write(ren, "final.json")
zonePolygon = geojsonio::geojson_read("final.json", what = "sp")
zonePolygon = geojsonio::geojson_read("~/Shiny/rogerPro/final.json", what = "sp")
zonePolygon = geojsonio::geojson_read("~/Shiny/rogerPro/final.json", what = "sp")
urlWalkScore = function(apiKey, lat, lon, mode, time) {
baseDomain = "http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey="
result = paste0(baseDomain,apiKey,"&origin=",lat,"%2C",lon,"8&mode=",mode,"&time=",time)
return (result)
}
library(leaflet)
library(googleway)
library(RCurl)
library(geojsonio)
library(jsonlite)
library(rgdal)
library(shinythemes)
library(shinyWidgets)
library(ggmap)
library(geojsonio)
getJsonWalkScore = function(url) {
rawJson = read_json(url) # stringToList
geoList = rawJson$response$geometry #listToGeoList
geoJsonWalkScore = toJSON(geoList)
return (geoJsonWalkScore)
}
apiKeyWalkScore = "8412c70d89cbac3d039721166ed78575"
mode = "transit"
time = 40
lat = 47.6062095
lon = -122.3320708
url = urlWalkScore(apiKeyWalkScore, lat, lon, mode, time)
ren = getJsonWalkScore(url)
write(ren, "final.json")
zonePolygon = geojsonio::geojson_read("~/Shiny/rogerPro/final.json", what = "sp")
ren
zonePolygon = geojsonio::geojson_read("~/Shiny/rogerPro/final.json")
getwd()
setwd('~/Shiny/rogerPro/')
getwd()
apiKeyWalkScore = "8412c70d89cbac3d039721166ed78575"
mode = "transit"
time = 40
lat = 47.6062095
lon = -122.3320708
url = urlWalkScore(apiKeyWalkScore, lat, lon, mode, time)
ren = getJsonWalkScore(url)
write(ren, "final.json")
zonePolygon = geojsonio::geojson_read("~/Shiny/rogerPro/final.json")
zonePolygon = geojsonio::geojson_read("final.json")
write(ren, "final.geojson")
zonePolygon = geojsonio::geojson_read("final.json")
pp = getURL(url)
write(pp, "./data/raw_region.json")
doc = read_json("./data/raw_region.json")
final = doc$response$geometry
exportJson <- toJSON(final)
write(exportJson, "./data/final.json")
rr_code = geojson_read('./data/final.json', what = 'sp')
ren
pp = getURL("http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey=8412c70d89cbac3d039721166ed78575&origin=47.6062095%2C-122.3320708&mode=transit&time=60")
write(pp, "./data/raw_region.json")
doc = read_json("./data/raw_region.json")
final = doc$response$geometry
exportJson <- toJSON(final)
write(exportJson, "./data/final.json")
rr_code = geojson_read('./data/final.json', what = 'sp')
ren
pp
library(jsonlite)
library(leaflet)
url <- "https://raw.githubusercontent.com/openseattle/seattle-boundaries/master/data/zip-codes.geojson"
geojson <- fromJSON(url, simplifyVector = FALSE)
leaflet() %>%
addTiles() %>%
addGeoJSON(geojson) %>%
setView(lng = -122.2, lat = 47.6, zoom = 10)
geojson <- fromJSON("final.json", simplifyVector = FALSE)
leaflet() %>%
addTiles() %>%
addGeoJSON(geojson) %>%
setView(lng = -122.2, lat = 47.6, zoom = 10)
View(geojson)
url <- "https://raw.githubusercontent.com/openseattle/seattle-boundaries/master/data/zip-codes.geojson"
geojson <- fromJSON(url, simplifyVector = FALSE)
View(geojson)
apiKeyWalkScore = "8412c70d89cbac3d039721166ed78575"
mode = "drive"
time = 40
lat = 47.6062095
lon = -122.3320708
url = urlWalkScore(apiKeyWalkScore, lat, lon, mode, time)
ren = getJsonWalkScore(url)
write(ren, "final.geojson")
zonePolygon = geojsonio::geojson_read("final.json")
library(geojson)
library(geojsonio)
url <- "http://leafletjs.com/examples/choropleth/us-states.js"
# read as text file
doc <- readLines(url)
# remove the javascript assignment at the front
doc2 <- gsub("var statesData = ", "", doc)
# write out as a temp file and read
write(doc2, file = "tempgeo.json")
states <- geojson_read("tempgeo.json", what = "sp")
doc2
pp = getURL("http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey=8412c70d89cbac3d039721166ed78575&origin=47.6062095%2C-122.3320708&mode=transit&time=60")
pp
write(pp, "./data/raw_region.json")
doc = read_json("./data/raw_region.json")
doc$status
doc$response
t = doc$response$geometry
class(t)
geojson_read(t)
geojson_write(t)
apiKeyWalkScore = "8412c70d89cbac3d039721166ed78575"
mode = "drive"
time = 40
lat = 47.6062095
lon = -122.3320708
url = urlWalkScore(apiKeyWalkScore, lat, lon, mode, time)
ren = getJsonWalkScore(url)
write(ren, "final.geojson")
pp = getURL("http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey=8412c70d89cbac3d039721166ed78575&origin=47.6062095%2C-122.3320708&mode=transit&time=60")
write(pp, "./data/raw_region.json")
doc = read_json("./data/raw_region.json")
final = doc$response$geometry
exportJson <- toJSON(final)
write(exportJson, "./data/final.json")
pp
pp = getURL("http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey=8412c70d89cbac3d039721166ed78575&origin=47.6062095%2C-122.3320708&mode=transit&time=60")
write(pp, "./data/raw_region.json")
doc = read_json("./data/raw_region.json")
final = doc$response$geometry
exportJson <- toGEOJSON(final)
exportJson <- toGeoJSON(final)
install.packages("leafletR")
exportJson <- toGeoJSON(final)
library(leafletR)
exportJson <- toGeoJSON(final)
pp = GET("http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey=8412c70d89cbac3d039721166ed78575&origin=47.6062095%2C-122.3320708&mode=transit&time=60")
library(httr)
pp = GET("http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey=8412c70d89cbac3d039721166ed78575&origin=47.6062095%2C-122.3320708&mode=transit&time=60")
t = content(pp)
t
View(t)
m = t$response$geometry
m
class(m)
exportJson <- toGeoJSON(m)
exportJson <- toJSON(m)
write(exportJson, "./data/final.json")
rr_code = geojson_read('./data/final.json', what = 'sp')
final
m
install.packages("rjson")
install.packages("rjson")
library("rjson")
json_file <- "http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey=8412c70d89cbac3d039721166ed78575&origin=47.6062095%2C-122.3320708&mode=transit&time=60"
json_data <- fromJSON(file=json_file)
View(json_data)
class(json_data)
class(json_file)
fuck = json_data$response$geometry
write(fuck, "what.geojason")
class(fuck)
json_file <- "http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey=8412c70d89cbac3d039721166ed78575&origin=47.6062095%2C-122.3320708&mode=transit&time=60"
geojson_read("try.geojson", what = "sp")
library("geojsonio", lib.loc="/Library/Frameworks/R.framework/Versions/3.4/Resources/library")
geojson_read("try.geojson", what = "sp")
ttt = geojson_read("try.geojson", what = "sp")
pp = GET("http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey=8412c70d89cbac3d039721166ed78575&origin=47.6062095%2C-122.3320708&mode=transit&time=60")
pp = getURL("http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey=8412c70d89cbac3d039721166ed78575&origin=47.6062095%2C-122.3320708&mode=transit&time=60")
library(leaflet)
library(googleway)
library(RCurl)
library(geojsonio)
library(jsonlite)
library(rgdal)
library(shinythemes)
library(shinyWidgets)
library(ggmap)
pp = getURL("http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey=8412c70d89cbac3d039721166ed78575&origin=47.6062095%2C-122.3320708&mode=transit&time=60")
pp
ttt = geojson_read("try2.json", what = "sp")
ttt
leaflet(ttt) %>%
addTiles() %>%
library(geojson)
leaflet(ttt) %>%
addTiles()
leaflet(ttt) %>%
addTiles() %>%
addPolygons(stroke = TRUE, smoothFactor = 0.5, fillOpacity = 0.8)
apiKeyWalkScore = "8412c70d89cbac3d039721166ed78575"
mode = "drive"
time = 40
lat = 47.6062095
lon = -122.3320708
url = urlWalkScore(apiKeyWalkScore, lat, lon, mode, time)
ren = getJsonWalkScore(url)
ren
read_json(url)
pp = getURL("http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey=8412c70d89cbac3d039721166ed78575&origin=47.6062095%2C-122.3320708&mode=transit&time=60")
write(pp, "./data/raw_region.json")
doc = read_json("./data/raw_region.json")
final = doc$response$geometry
exportJson <- toJSON(m)
write(exportJson, "./data/final.json")
rr_code = geojson_read('./data/final.json', what = 'sp')
a
final
exportJson <- toGeoJSON(m)
pp = getURL("http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey=8412c70d89cbac3d039721166ed78575&origin=47.6062095%2C-122.3320708&mode=transit&time=60")
write(pp, "./data/raw_region.json")
doc = read_json("./data/raw_region.json")
doc$response$geometry
write(final, "./data/final.json")
doc = fiel("./data/raw_region.json")
doc = file("./data/raw_region.json")
doc
doc = read_file("./data/raw_region.json")
install.packages("readr")
library(readr)
doc = read_file("./data/raw_region.json")
doc
pp = getURL("http://api2.walkscore.com/api/v1/traveltime_polygon/json?wsapikey=8412c70d89cbac3d039721166ed78575&origin=47.6062095%2C-122.3320708&mode=transit&time=60")
pp
tt = substr(pp, 1, 2)
tt
pp = gsub("\\", "", pp)
grep('\"geometry\":',pp)
regexpr('geometry', pp)
tt = substr(pp, 64, 70)
tt
grep('\"geometry\":',pp)
substr(pp, 64, 72)
regexpr('metry\":', pp)
substr(pp, 67, 73)
substr(pp, 74, 90)
t = regexpr('metry\":', pp)
t
class(t)
t(,"match.length")
attr(t, "match.length")
t
t[1]
t[1] + 2
head = regexpr('metry\":', pp)
start_index = head[1] + attr(head,"match.length")
substr(pp, start_index, 90)
head = regexpr('metry\":', pp)
startIndex = head[1] + attr(head,"match.length")
toe = regexpr(',\"mode\"', pp)
endIndex = toe[1] - 1
substr(pp, startIndex, endIndex)
getGeoJsonWalkScore = function(url) {
rawString = getURL(url)
# Parse
head = regexpr('metry\":', rawString)
startIndex = head[1] + attr(head,"match.length")
toe = regexpr(',\"mode\"', rawString)
endIndex = toe[1] - 1
goodString = substr(rawString, startIndex, endIndex)
# Store
exportJson =  toJSON(goodString)
write(exportJson, "./data/CMM.json")
return (goodString)
}
apiKeyWalkScore = "8412c70d89cbac3d039721166ed78575"
mode = "drive"
time = 40
lat = 47.6062095
lon = -122.3320708
url = urlWalkScore(apiKeyWalkScore, lat, lon, mode, time)
ren = getGeoJsonWalkScore(url)
zonePolygon = geojsonio::geojson_read("./data/CMM.json")
getURL(url)
head = regexpr('metry\":', rawString)
startIndex = head[1] + attr(head,"match.length")
toe = regexpr(',\"mode\"', rawString)
endIndex = toe[1] - 1
goodString = substr(rawString, startIndex, endIndex)
rawString = getURL(url)
# Parse
head = regexpr('metry\":', rawString)
startIndex = head[1] + attr(head,"match.length")
toe = regexpr(',\"mode\"', rawString)
endIndex = toe[1] - 1
goodString = substr(rawString, startIndex, endIndex)
goodString
ren
write(goodString, "./data/CMM.json")
zonePolygon = geojsonio::geojson_read("./data/CMM.json")
zonePolygon = geojsonio::geojson_read(goodString)
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
